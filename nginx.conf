worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 32768;

error_log /etc/nginx/logs/error.log error;

pid /etc/nginx/logs/nginx.pid;

events {
    worker_connections 8;
    use epoll;
    multi_accept on;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    server_tokens off;
    keepalive_timeout 30;
    log_format main '{client: $remote_user $remote_addr:$remote_port, server: $server_name $server_addr:$server_port}'
                    '[time: $time_local]{req: $request}'
                    '{status: $status}{bytes: $body_bytes_sent}{referer: $http_referer}'
                    '{agent: $http_user_agent}{x_forwarded: $http_x_forwarded_for}';
    access_log /etc/nginx/logs/access.log main;
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
    server {
        listen 443 ssl reuseport default_server;
        listen [::]:443 ssl reuseport default_server;
        # http2 on;
        ssl_certificate         /etc/nginx/data/cert.pem;
        ssl_certificate_key     /etc/nginx/data/cert.key;
        ssl_protocols           TLSv1.3 TLSv1.2;
        ssl_stapling            on;
        ssl_stapling_verify     on;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
        # add_header X-XSS-Protection "1; mode=block";
        root /etc/nginx/public;
        index index.html;
        location / {
            limit_req zone=mylimit burst=100 nodelay;
            try_files $uri $uri/ =404;
            error_page 404 /404.html;
        }
    }
    server {
        listen 80 reuseport default_server;
        listen [::]:80 reuseport default_server;
        server_name _;
        location / {
            return 301 https://$host$request_uri;
        }
    }
}
